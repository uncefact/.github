name: jargon_onRelease

on:
  workflow_call:
    
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: 'us-west-1'
  # Setting an environment variable with the value of a configuration variable
  utility_jar: vocab-jsonld-utility-1.6.5.jar
  domain_name: ${{ github.event.client_payload.domain.name }}
  prefix: ${{ github.event.client_payload.settings.jsonld.prefix }}
  version: ${{ github.event.client_payload.release.version }}

jobs:
  update:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.prefix }}-pages
      - run: 'echo "Domain name: ${{ env.domain_name }}"'

      - id: download-md-utility
        uses: robinraju/release-downloader@v1.8
        with:
          repository: "uncefact/utilities"
          latest: true
          fileName: "${{ env.utility_jar }}"
          tarBall: false
          zipBall: false
          extract: false
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
      - shell: bash
        env:
          CLIENT_PAYLOAD: ${{ toJSON(github.event.client_payload) }}
        run: |
          printf '%s\n' "$CLIENT_PAYLOAD" > client_payload.json
          cat client_payload.json
          rm client_payload.json
      - id: set-env
        name: output a baseurl for the release
        run: |
          baseurl=$(echo "${{ env.prefix }}" | sed -r 's/[-]+/\//g')
          major_version=$(echo "${{ env.version }}" | cut -d. -f1)
          domain_name="${{ env.domain_name }}"
          echo "tag_name=${{ env.prefix }}-${{ env.version }}" >> "$GITHUB_OUTPUT"
          echo "artefacts_path=/vocabulary/$baseurl" >> "$GITHUB_OUTPUT"
          echo "baseurl=/vocabulary/$baseurl/$major_version" >> "$GITHUB_OUTPUT"
          echo "domain_name=$domain_name" >> "$GITHUB_OUTPUT"
      - name: Print the baseurl
        run: |
          echo "the baseurl is ${{ steps.set-env.outputs.baseurl }}"
      - run: |
          mkdir _artefacts || echo -e "skip"

      - run: |
          artefact_url=${{ github.event.client_payload.artefacts.jsonldVocab.url }}
          artefact=${{ env.prefix }}.jsonld
          wget -O $artefact $artefact_url && \
          sed -i 's/vocabulary.uncefact.org\/untp/test.uncefact.org\/vocabulary\/untp/g' $artefact || echo -e "jsonldVocab not found"
      - run: |
          artefact_url=${{ github.event.client_payload.artefacts.jsonldContext.url }}
          artefact="_artefacts/${{ env.prefix }}-context-${{ env.version }}.jsonld"
          wget -O $artefact $artefact_url && \
          sed -i 's/vocabulary.uncefact.org\/untp/test.uncefact.org\/vocabulary\/untp/g' $artefact || echo -e "jsonldContext not found"
      - run: |
          artefact_url=${{ github.event.client_payload.artefacts.jsonSchemas[0].url }}
          artefact="_artefacts/${{ env.prefix }}-schema-${{ env.version }}.json"
          wget -O $artefact $artefact_url && \
          sed -i 's/vocabulary.uncefact.org\/untp/test.uncefact.org\/vocabulary\/untp/g' $artefact || echo -e "jsonSchema not found"
      - run: |
          artefact_url=${{ github.event.client_payload.artefacts.jsonSchemas[1].url }}
          artefact="_artefacts/${{ env.prefix }}-instance-${{ env.version }}.json"
          wget -O $artefact $artefact_url && \
          sed -i 's/vocabulary.uncefact.org\/untp/test.uncefact.org\/vocabulary\/untp/g' $artefact || echo -e "jsonInstance not found"
      - run: |
          cp _data/versions.json .
          rm -rf _data/
          rm -rf _properties/
          rm -rf _classes/
          rm -rf _code-lists/ 
      - run: java -jar ${{ env.utility_jar }} -m "md" -d "./" -i ${{ env.prefix }}.jsonld && cat out.md || cat err.md
      - run: mv versions.json _data/
      - run: |
          rm ${{ env.utility_jar }}
          rm batch-add.json || echo -e "skip"
          rm batch-delete.json || echo -e "skip"
      
      - name: update the domain branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          yq -i '.versions.${{ env.prefix }}="${{ env.version }}"' _config_preview.yml 

          git add .          
          git commit -m "Release ${{ env.version }}" || echo -e "nothing to commit" 
          git tag -a ${{ steps.set-env.outputs.tag_name }} -m "Release ${{ env.version }}"
          git push origin ${{ steps.set-env.outputs.tag_name }}
          git push origin ${{ env.prefix }}-pages

          yq -i '.baseurl="${{ steps.set-env.outputs.baseurl }}"' _config_preview.yml 

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.6.5" # Not needed with a .ruby-version file
      - name: "Bundle install"
        run: bundle install
      - name: "Build Site"
        run: bundle exec jekyll build --config _config_preview.yml
      - name: "Deploy to AWS S3"
        run: |
          aws s3 sync ./_artefacts/ s3://uncefact-vocab-preview-sam-bucket-private${{ steps.set-env.outputs.artefacts_path }} --cache-control max-age=604800
          aws s3 sync ./_site/ s3://uncefact-vocab-preview-sam-bucket-private${{ steps.set-env.outputs.baseurl }} --delete --cache-control max-age=604800
          aws cloudfront create-invalidation --distribution-id "E32QP2QS6SXRHC" --paths "${{ steps.set-env.outputs.artefacts_path }}/*"

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.set-env.outputs.tag_name }}
        run: |
          gh release create "$tag" --draft \
            --repo "$GITHUB_REPOSITORY" \
            --title "Pre-release for $tag" --notes "Published at https://test.uncefact.org${{ steps.set-env.outputs.baseurl }}/about"
          gh release upload "$tag" --repo "$GITHUB_REPOSITORY" ${{ env.prefix }}.jsonld

          cd _artefacts/
          
          [[ -f ${{ env.prefix }}-context-${{ env.version }}.jsonld ]] && gh release upload "$tag" \
          --repo "$GITHUB_REPOSITORY" ${{ env.prefix }}-context-${{ env.version }}.jsonld || echo -e "no context file"

          [[ -f ${{ env.prefix }}-schema-${{ env.version }}.json ]] && gh release upload "$tag" \
          --repo "$GITHUB_REPOSITORY" ${{ env.prefix }}-schema-${{ env.version }}.json || echo -e "no schema file"

          [[ -f ${{ env.prefix }}-instance-${{ env.version }}.json ]] && gh release upload "$tag" \
          --repo "$GITHUB_REPOSITORY" ${{ env.prefix }}-instance-${{ env.version }}.json || echo -e "no instance file"
  
      
  
      - uses: actions/checkout@v4
        with:
          ref: untp-pages
          path: untp-pages
          token: ${{ secrets.PAT_TOKEN }}
      
      - name: update untp-pages branch
        working-directory: ./untp-pages
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          yq -i '.versions.${{ env.prefix }}="${{ env.version }}"' _config_preview.yml 

          git add .
          
          git commit -m "Update version for ${{ env.prefix }} to ${{ env.version }}" || echo -e "nothing to commit"
  
          git push origin untp-pages
  
  
    
        
    
